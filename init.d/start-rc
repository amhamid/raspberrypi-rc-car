#!/bin/bash
# radio control raspberry pi

DAEMON_PATH="/home/pi/dev/raspberrypi-rc-car"

NAME=start-rc
DESC="My Radio Control Raspberry pi"
PIDFILE1=/var/run/websocket-rc.pid
PIDFILE2=/var/run/webserver-rc.pid
PIDFILE3=/var/run/raspstill-rc.pid
PIDFILE4=/var/run/streamer-rc.pid
SCRIPTNAME=/etc/init.d/$NAME

case "$1" in
start)
	printf "%-50s" "Starting $NAME..."
	cd $DAEMON_PATH
	PID1=`python python/websocket.py > /dev/null 2>&1 & echo $!`
	PID2=`python python/webserver.py > /dev/null 2>&1 & echo $!`
        if [ -n "$PID1" ] && [ -n "$PID1" ]; then
            echo $PID1 > $PIDFILE1
            echo $PID2 > $PIDFILE2
            printf "%s\n" "Ok"
        else
            printf "%s\n" "Fail"
        fi

	printf "%-50s" "Starting video streamer..."
	PID3=`raspistill --nopreview -w 480 -h 320 -q 8 -ISO 200 -o /home/pi/stream/pic.jpg -tl 1 -t 9999999 -th 0:0:0 > /dev/null 2>&1 & echo $!`
        PID4=`LD_LIBRARY_PATH=/usr/local/lib mjpg_streamer -i "input_file.so -f /home/pi/stream -n pic.jpg" -o "output_http.so -w /usr/local/www" > /dev/null 2>&1 & echo $!`
        if [ -n "$PID3" ] && [ -n "$PID4" ]; then
            echo $PID3 > $PIDFILE3
            echo $PID4 > $PIDFILE4
            printf "%s\n" "Ok"
        else
            printf "%s\n" "Fail"
        fi
;;
status)
        printf "%-50s" "Checking Websocket-rc ..."
        if [ -f $PIDFILE1 ]; then
            PID1=`cat $PIDFILE1`
            if [ -z "`ps axf | grep ${PID1} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service [websocket-rc] not running"
        fi
        
        printf "%-50s" "Checking Webserver-rc ..."
        if [ -f $PIDFILE2 ]; then
            PID2=`cat $PIDFILE2`
            if [ -z "`ps axf | grep ${PID2} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service [webserver-rc] not running"
        fi

        printf "%-50s" "Checking Raspstill-rc ..."
        if [ -f $PIDFILE3 ]; then
            PID3=`cat $PIDFILE3`
            if [ -z "`ps axf | grep ${PID3} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service [raspstill-rc] not running"
        fi

        printf "%-50s" "Checking Streamer-rc ..."
        if [ -f $PIDFILE4 ]; then
            PID4=`cat $PIDFILE4`
            if [ -z "`ps axf | grep ${PID4} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service [streamer-rc] not running"
        fi
;;
stop)
        printf "%-50s" "Stopping Websocket-rc"
            PID1=`cat $PIDFILE1`
            cd $DAEMON_PATH
        if [ -f $PIDFILE1 ]; then
            kill -HUP $PID1
            printf "%s\n" "Ok"
            rm -f $PIDFILE1
        else
            printf "%s\n" "pidfile1 (websocket-rc) not found"
        fi

        printf "%-50s" "Stopping Webserver-rc"
            PID2=`cat $PIDFILE2`
            cd $DAEMON_PATH
        if [ -f $PIDFILE2 ]; then
            kill -HUP $PID2
            printf "%s\n" "Ok"
            rm -f $PIDFILE2
        else
            printf "%s\n" "pidfile2 (webserver-rc) not found"
        fi

	printf "%-50s" "Stopping Raspstill-rc"
            PID3=`cat $PIDFILE3`
        if [ -f $PIDFILE3 ]; then
            kill -HUP $PID3
            printf "%s\n" "Ok"
            rm -f $PIDFILE3
        else
            printf "%s\n" "pidfile3 (raspstill-rc) not found"
        fi

	printf "%-50s" "Stopping Stremer-rc"
            PID4=`cat $PIDFILE4`
        if [ -f $PIDFILE4 ]; then
            kill -HUP $PID4
            printf "%s\n" "Ok"
            rm -f $PIDFILE4
        else
            printf "%s\n" "pidfile4 (streamer-rc) not found"
        fi

	sleep 10s
;;

restart)
  	$0 stop
  	$0 start
;;

*)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 1
esac

